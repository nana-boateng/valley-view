{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Input, ViewChild } from '@angular/core';\nimport * as Hammer from 'hammerjs';\nlet SlidesComponent = class SlidesComponent {\n  constructor(renderer) {\n    this.renderer = renderer;\n    this.photosSources = [];\n    this.currentIndex = 0;\n  }\n  ngAfterViewInit() {\n    const hammer = new Hammer(this.slideContainer.nativeElement);\n    hammer.get('swipe').set({\n      direction: Hammer.DIRECTION_HORIZONTAL\n    });\n    hammer.on('swipeleft', () => {\n      this.nextPhoto();\n    });\n    hammer.on('swiperight', () => {\n      this.prevPhoto();\n    });\n  }\n  nextPhoto() {\n    if (this.currentIndex < this.photosSources.length - 1) {\n      this.currentIndex++;\n      this.updateSlide();\n    }\n  }\n  prevPhoto() {\n    if (this.currentIndex > 0) {\n      this.currentIndex--;\n      this.updateSlide();\n    }\n  }\n  updateSlide() {\n    const slide = this.slideContainer.nativeElement.querySelector('.slide');\n    this.renderer.setStyle(slide, 'background-image', `url('${this.photosSources[this.currentIndex]}')`);\n  }\n};\n__decorate([Input()], SlidesComponent.prototype, \"photosSources\", void 0);\n__decorate([ViewChild('slideContainer')], SlidesComponent.prototype, \"slideContainer\", void 0);\nSlidesComponent = __decorate([Component({\n  selector: 'app-slides',\n  templateUrl: './slides.component.html',\n  styleUrls: ['./slides.component.css']\n})], SlidesComponent);\nexport { SlidesComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,EAAEC,KAAK,EAAEC,SAAS,QAA+B,eAAe;AAClF,OAAO,KAAKC,MAAM,MAAM,UAAU;AAO3B,IAAMC,eAAe,GAArB,MAAMA,eAAe;EAM1BC,YAAoBC,QAAmB;IAAnB,aAAQ,GAARA,QAAQ;IALnB,kBAAa,GAAa,EAAE;IACrC,iBAAY,GAAG,CAAC;EAI2B;EAE3CC,eAAe;IACb,MAAMC,MAAM,GAAG,IAAIL,MAAM,CAAC,IAAI,CAACM,cAAc,CAACC,aAAa,CAAC;IAC5DF,MAAM,CAACG,GAAG,CAAC,OAAO,CAAC,CAACC,GAAG,CAAC;MAAEC,SAAS,EAAEV,MAAM,CAACW;IAAoB,CAAE,CAAC;IAEnEN,MAAM,CAACO,EAAE,CAAC,WAAW,EAAE,MAAK;MAC1B,IAAI,CAACC,SAAS,EAAE;IAClB,CAAC,CAAC;IAEFR,MAAM,CAACO,EAAE,CAAC,YAAY,EAAE,MAAK;MAC3B,IAAI,CAACE,SAAS,EAAE;IAClB,CAAC,CAAC;EACJ;EAEAD,SAAS;IACP,IAAI,IAAI,CAACE,YAAY,GAAG,IAAI,CAACC,aAAa,CAACC,MAAM,GAAG,CAAC,EAAE;MACrD,IAAI,CAACF,YAAY,EAAE;MACnB,IAAI,CAACG,WAAW,EAAE;;EAEtB;EAEAJ,SAAS;IACP,IAAI,IAAI,CAACC,YAAY,GAAG,CAAC,EAAE;MACzB,IAAI,CAACA,YAAY,EAAE;MACnB,IAAI,CAACG,WAAW,EAAE;;EAEtB;EAEAA,WAAW;IACT,MAAMC,KAAK,GAAG,IAAI,CAACb,cAAc,CAACC,aAAa,CAACa,aAAa,CAAC,QAAQ,CAAC;IACvE,IAAI,CAACjB,QAAQ,CAACkB,QAAQ,CAACF,KAAK,EAAE,kBAAkB,EAAE,QAAQ,IAAI,CAACH,aAAa,CAAC,IAAI,CAACD,YAAY,CAAC,IAAI,CAAC;EACtG;CACD;AAtCUO,YAARxB,KAAK,EAAE,sDAA8B;AAGTwB,YAA5BvB,SAAS,CAAC,gBAAgB,CAAC,uDAA6B;AAJ9CE,eAAe,eAL3BJ,SAAS,CAAC;EACT0B,QAAQ,EAAE,YAAY;EACtBC,WAAW,EAAE,yBAAyB;EACtCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,GACWxB,eAAe,CAuC3B;SAvCYA,eAAe","names":["Component","Input","ViewChild","Hammer","SlidesComponent","constructor","renderer","ngAfterViewInit","hammer","slideContainer","nativeElement","get","set","direction","DIRECTION_HORIZONTAL","on","nextPhoto","prevPhoto","currentIndex","photosSources","length","updateSlide","slide","querySelector","setStyle","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/home/nana/projects/personal/valview/valview-ng/src/app/components/photos/slides/slides.component.ts"],"sourcesContent":["import { Component, Input, ViewChild, ElementRef, Renderer2 } from '@angular/core';\nimport * as Hammer from 'hammerjs';\n\n@Component({\n  selector: 'app-slides',\n  templateUrl: './slides.component.html',\n  styleUrls: ['./slides.component.css']\n})\nexport class SlidesComponent {\n  @Input() photosSources: string[] = [];\n  currentIndex = 0;\n\n  @ViewChild('slideContainer') slideContainer!: ElementRef;\n\n  constructor(private renderer: Renderer2) { }\n\n  ngAfterViewInit() {\n    const hammer = new Hammer(this.slideContainer.nativeElement);\n    hammer.get('swipe').set({ direction: Hammer.DIRECTION_HORIZONTAL });\n\n    hammer.on('swipeleft', () => {\n      this.nextPhoto();\n    });\n\n    hammer.on('swiperight', () => {\n      this.prevPhoto();\n    });\n  }\n\n  nextPhoto() {\n    if (this.currentIndex < this.photosSources.length - 1) {\n      this.currentIndex++;\n      this.updateSlide();\n    }\n  }\n\n  prevPhoto() {\n    if (this.currentIndex > 0) {\n      this.currentIndex--;\n      this.updateSlide();\n    }\n  }\n\n  updateSlide() {\n    const slide = this.slideContainer.nativeElement.querySelector('.slide');\n    this.renderer.setStyle(slide, 'background-image', `url('${this.photosSources[this.currentIndex]}')`);\n  }\n}\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}